package GUI;

import Gestion_votos.Datos;
import Gestion_votos.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Arrays;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sherlock
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
  
    public Menu() {
        
        initComponents();
        mostrarElecciones();
    }
    public void mostrarElecciones() {
        DefaultTableModel model = (DefaultTableModel) elecciones_Table.getModel();
        model.setRowCount(0);
        String[][] elecciones = Gestion_votos.Datos.data.mostrarElecciones();
        JButton boton1=new JButton("candidatos");
        
        boton1.setName("candidatos");
        JButton boton2=new JButton("Mesa Electoral");
        boton2.setName("Mesa Electoral");
        JButton boton3=new JButton("Informe");
        boton3.setName("Informe");

        // JButton btnCandidatos = new JButton("candidatos");
        // insertarIcon(btnCandidatos,"/imagen/imagen2.png");
        for (String[] eleccion : elecciones) {    
            System.out.println(Arrays.toString(eleccion));
            
            model.addRow(new Object[]{eleccion[0], eleccion[1], false,boton1,boton2,boton3});
    }
        System.out.println(Gestion_votos.Datos.data.tama()); 
        
}
        private void eliminarFilasSeleccionadas() {
            DefaultTableModel model = (DefaultTableModel)elecciones_Table.getModel();
        // Recorremos las filas en la tabla (de atrás hacia adelante para evitar problemas de índices al eliminar)
        for (int i = model.getRowCount()-1; i >= 0; i--) {
            Boolean isSelected = (Boolean) model.getValueAt(i, 2); // Comprobar si está marcado el checkbox
            if (isSelected != null && isSelected) {
                System.out.println(i);
                Gestion_votos.Datos.data.eliminarEleccion(i+1);
                mostrarElecciones();
              
               System.out.println("Lista actual después de eliminar:");
                    Gestion_votos.Datos.data.mostrarElecciones();
            }
            
        }
        mostrarElecciones();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        agregar_Button = new javax.swing.JButton();
        editar_Button = new javax.swing.JButton();
        eliminar_Button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        elecciones_Table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel1.setText("MENU DE ELECCIONES");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        agregar_Button.setText("Agregar eleccion");
        agregar_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar_ButtonActionPerformed(evt);
            }
        });

        editar_Button.setText("Editar");
        editar_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editar_ButtonActionPerformed(evt);
            }
        });

        eliminar_Button.setText("Eliminar");
        eliminar_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar_ButtonActionPerformed(evt);
            }
        });

        elecciones_Table.setDefaultRenderer(Object.class, new Render());
        elecciones_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Tipo eleccion", "Seleccionar","Candidatos","Mesa Electoral",
                "Informe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class,
                JButton.class,JButton.class,JButton.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true,false,false,false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }

        });
        elecciones_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elecciones_TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(elecciones_Table);
        elecciones_Table.getColumnModel().getColumn(3).setCellRenderer(new Render());
        elecciones_Table.getColumnModel().getColumn(4).setCellRenderer(new Render());
        elecciones_Table.getColumnModel().getColumn(5).setCellRenderer(new Render());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(agregar_Button)
                                .addGap(82, 82, 82)
                                .addComponent(editar_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(146, 146, 146)
                                .addComponent(eliminar_Button))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(199, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregar_Button)
                    .addComponent(editar_Button)
                    .addComponent(eliminar_Button))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editar_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editar_ButtonActionPerformed
        // TODO add your handling code here:
         Editar_elecciones formulario = new Editar_elecciones();
        int selec = elecciones_Table.getSelectedRow();
        if (selec != -1) {
            Boolean bol = (Boolean) elecciones_Table.getValueAt(selec, 2);
            if (bol != null && bol) {
            String fecha2 = (String) elecciones_Table.getValueAt(selec, 0);
            String tipo2 = (String) elecciones_Table.getValueAt(selec, 1);
            formulario.setDatos(selec, fecha2, tipo2);
            formulario.setVisible(true);
            formulario.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
            mostrarElecciones();
        }});           
            }}               
    }//GEN-LAST:event_editar_ButtonActionPerformed

    private void eliminar_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar_ButtonActionPerformed
        // TODO add your handling code here:
        eliminarFilasSeleccionadas();
        mostrarElecciones();
    }//GEN-LAST:event_eliminar_ButtonActionPerformed

    private void agregar_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar_ButtonActionPerformed
        Agregar_elecciones formulario = new Agregar_elecciones();
        formulario.setVisible(true);
        formulario.addWindowListener(new java.awt.event.WindowAdapter() {
        public void windowClosed(java.awt.event.WindowEvent windowEvent) {
           Datos.guardarDatos();
            mostrarElecciones();
        }
    });
    }//GEN-LAST:event_agregar_ButtonActionPerformed

    private void elecciones_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elecciones_TableMouseClicked
        // TODO add your handling code here:
        int row = elecciones_Table.rowAtPoint(evt.getPoint());
        int colum = elecciones_Table.columnAtPoint(evt.getPoint());
        if(row<elecciones_Table.getRowCount() && row>=0 && colum<elecciones_Table.getColumnCount() &&colum>=0){
            Object value=elecciones_Table.getValueAt(row, colum);
            if(value instanceof JButton){
                ((JButton)value).doClick();
                JButton boton=(JButton) value;
                
                if(boton.getName().equals("candidatos")){
                    System.out.println("click candidatos");
                    Candidatos candit = new Candidatos();
                    candit.setdatos(row);
                    candit.setVisible(true);
                }
                if(boton.getName().equals("Mesa Electoral")){
                    System.out.println("click Mesa Eelctoral");
                    Eleccion elec=Datos.data.eleccion_pos(row);
                    
                    if(elec.getCandidatos().getCabeza()!=null){
                     Mesa_Electoral mesa = new Mesa_Electoral();
                    mesa.setdatos(row);
                    mesa.setVisible(true);   
                    }else{
                        JOptionPane.showMessageDialog(this, "Por favor, agregue candidatos", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
                if(boton.getName().equals("Informe")){
                    System.out.println("click Informe");
                    Eleccion elec=Datos.data.eleccion_pos(row);
                    Lista<Mesa> mesa=elec.getMesaelectoral();
                    Nodo<Mesa>mes=mesa.getCabeza();
                    boolean encontrada = false;
                    while (mes != null) {
                        if (mes.getElemento().getActa() != null) {
                            encontrada = true;
                            break;  
        }
                        mes = mes.getSgteNodo();  
    }
                    if (encontrada) {
                    Informe info = new Informe();
                    info.setdatos(row);
                    info.setVisible(true);
                } else{
                    JOptionPane.showMessageDialog(this, "No hay actas", "Error", JOptionPane.ERROR_MESSAGE);
                }
                    }
        }
    }//GEN-LAST:event_elecciones_TableMouseClicked
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Iniciar_sesion().setVisible(true);
                
            }
            
            
        });
        Runtime.getRuntime().addShutdownHook(new Thread(() -> {
            Datos.guardarDatos();
            System.out.println("Datos guardados automáticamente al cerrar el programa.");
        }));
        Datos.cargarDatos();
    }
    public class Render extends DefaultTableCellRenderer {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            if (value instanceof JButton) {
                JButton button = (JButton) value;
                button.setOpaque(true);
                button.setBackground(Color.CYAN);
                return button;
            }
            return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
        }
    }

public void insertarIcon(JButton btn, String ruta){
    btn.setIcon(new javax.swing.ImageIcon(getClass().getResource(ruta)));
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar_Button;
    private javax.swing.JButton editar_Button;
    private javax.swing.JTable elecciones_Table;
    private javax.swing.JButton eliminar_Button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
   
}

